/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF, useAnimations } from '@react-three/drei';
import React, { FC, memo, useEffect, useRef } from 'react';
import { Group } from 'three';

useGLTF.preload('/Sorceress.glb');

type Props = {
  position: [x: number, y: number, z: number];
  animationIndex: number;
  isCastShadow?: boolean;
};

const Sorceress: FC<Props> = ({ position, isCastShadow, animationIndex }) => {
  const group = useRef<Group>(null);

  const { nodes, materials, animations } = useGLTF('/Sorceress.glb') as any;

  const { actions, names } = useAnimations(animations, group);

  useEffect(() => {
    actions[names[animationIndex]]?.reset().fadeIn(0.5).play();
    return () => {
      actions[names[animationIndex]]?.fadeOut(0.5);
    };
  }, [actions, animationIndex, names]);

  return (
    <group
      ref={group}
      {...{ position, castShadow: isCastShadow }}
      dispose={null}
    >
      <group name="Scene">
        <group
          name="Armature"
          rotation={[Math.PI / 2.5, 0, 0]}
          scale={0.0045}
          receiveShadow
          castShadow={isCastShadow}
        >
          <group name="Elaina_Clothes001">
            <skinnedMesh
              name="Elaina_Clothes001_1"
              geometry={nodes.Elaina_Clothes001_1.geometry}
              material={materials['Clothes.001']}
              skeleton={nodes.Elaina_Clothes001_1.skeleton}
              castShadow={isCastShadow}
              receiveShadow
            />
            <skinnedMesh
              name="Elaina_Clothes001_2"
              geometry={nodes.Elaina_Clothes001_2.geometry}
              material={materials['Clothes Outline.001']}
              skeleton={nodes.Elaina_Clothes001_2.skeleton}
              castShadow={isCastShadow}
              receiveShadow
            />
          </group>
          <group name="Elaina001">
            <skinnedMesh
              name="Elaina001_1"
              geometry={nodes.Elaina001_1.geometry}
              material={materials['Face Body.001']}
              skeleton={nodes.Elaina001_1.skeleton}
              castShadow={isCastShadow}
              receiveShadow
            />
            <skinnedMesh
              name="Elaina001_2"
              geometry={nodes.Elaina001_2.geometry}
              material={materials['Outline.001']}
              skeleton={nodes.Elaina001_2.skeleton}
              castShadow={isCastShadow}
              receiveShadow
            />
            <skinnedMesh
              name="Elaina001_3"
              geometry={nodes.Elaina001_3.geometry}
              material={materials['Eye.001']}
              skeleton={nodes.Elaina001_3.skeleton}
              castShadow={isCastShadow}
              receiveShadow
            />
          </group>
          <group name="Hair001">
            <skinnedMesh
              name="Hair001_1"
              geometry={nodes.Hair001_1.geometry}
              material={materials['Hair.001']}
              skeleton={nodes.Hair001_1.skeleton}
              castShadow={isCastShadow}
              receiveShadow
            />
            <skinnedMesh
              name="Hair001_2"
              geometry={nodes.Hair001_2.geometry}
              material={materials['Hair Outline.001']}
              skeleton={nodes.Hair001_2.skeleton}
              castShadow={isCastShadow}
              receiveShadow
            />
          </group>
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  );
};

export default memo(Sorceress);
